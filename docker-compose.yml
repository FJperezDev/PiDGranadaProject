---
services:
  traefik:
    image: traefik:latest
    command:
      - "--providers.docker=true"              
      - "--providers.docker.exposedbydefault=false"  # Solo enrutar contenedores con label traefik.enable=true
      - "--entrypoints.web.address=:80"        # Entrada HTTP
      - "--entrypoints.websecure.address=:443" # Entrada HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"  # Redirige HTTP→HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      # Let's Encrypt (resuelve TLS automáticamente)
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=franciscojavier.1763@gmail.com" 
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"

      # Dashboard (opcional)
      - "--api.dashboard=true"
      - "--api.insecure=false"   # mejor mantenerlo desactivado o protegido
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"   # acceso solo lectura
      - "traefik_lets:/letsencrypt"
    restart: unless-stopped
    networks:
      - webnet

  db:
    # image: arm64v8/postgres:latest
    image: postgres:latest
    environment:
      POSTGRES_DB: PiDdb
      POSTGRES_USER: marilena
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend_net

  service:
    build:
      context: backend/
    env_file: backend/.env
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            gunicorn backend.wsgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers 3"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.production
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miapp.rule=Host(`tu.dominio.com`)"
      - "traefik.http.routers.miapp.entrypoints=websecure"
      - "traefik.http.routers.miapp.tls.certresolver=le"
      - "traefik.http.services.miapp.loadbalancer.server.port=8000"
    volumes:
      - static_volume:/app/backend/staticfiles  # opcional
    restart: unless-stopped
    networks:
      - webnet
      - backend_net


volumes:
  traefik_lets:
  db_data:
  static_volume:

networks:
  webnet:
    external: false
  backend_net:
    external: false

