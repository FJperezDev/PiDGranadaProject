# Generated by Django 5.2.4 on 2025-11-01 10:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_es', models.TextField(unique=True)),
                ('name_en', models.TextField(unique=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('old', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Epigraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_es', models.TextField()),
                ('name_en', models.TextField()),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('old', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order_id'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_es', models.TextField(unique=True)),
                ('title_en', models.TextField(unique=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('old', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConceptIsRelatedToConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_concepts_from', to='content.concept')),
                ('concept_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_concepts_to', to='content.concept')),
            ],
            options={
                'unique_together': {('concept_from', 'concept_to')},
            },
        ),
        migrations.AddField(
            model_name='concept',
            name='related_concepts',
            field=models.ManyToManyField(related_name='related_to_concepts', through='content.ConceptIsRelatedToConcept', to='content.concept'),
        ),
        migrations.CreateModel(
            name='TeacherMakeChangeConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('new_concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='content.concept')),
                ('old_concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_changes', to='content.concept')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherMakeChangeEpigraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('new_epigraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='content.epigraph')),
                ('old_epigraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_changes', to='content.epigraph')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherMakeChangeTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('new_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='content.topic')),
                ('old_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_changes', to='content.topic')),
            ],
        ),
        migrations.AddField(
            model_name='epigraph',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='epigraphs', to='content.topic'),
        ),
        migrations.CreateModel(
            name='TopicIsAboutConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(unique=True)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.concept')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.topic')),
            ],
            options={
                'ordering': ['order_id'],
                'unique_together': {('topic', 'concept', 'order_id')},
            },
        ),
        migrations.AddField(
            model_name='topic',
            name='concepts',
            field=models.ManyToManyField(related_name='topics', through='content.TopicIsAboutConcept', to='content.concept'),
        ),
        migrations.AlterUniqueTogether(
            name='epigraph',
            unique_together={('id', 'topic')},
        ),
    ]
